//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Iitrust.CRLPublication.Client.PublicationServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublicationServiceReference.IPublicationService")]
    public interface IPublicationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicationService/CheckConnection", ReplyAction="http://tempuri.org/IPublicationService/CheckConnectionResponse")]
        bool CheckConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicationService/CheckConnection", ReplyAction="http://tempuri.org/IPublicationService/CheckConnectionResponse")]
        System.Threading.Tasks.Task<bool> CheckConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicationService/ProcessFile", ReplyAction="http://tempuri.org/IPublicationService/ProcessFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IPublicationService/ProcessFileFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        void ProcessFile(string crlFileName, byte[] crl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicationService/ProcessFile", ReplyAction="http://tempuri.org/IPublicationService/ProcessFileResponse")]
        System.Threading.Tasks.Task ProcessFileAsync(string crlFileName, byte[] crl);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPublicationServiceChannel : Iitrust.CRLPublication.Client.PublicationServiceReference.IPublicationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublicationServiceClient : System.ServiceModel.ClientBase<Iitrust.CRLPublication.Client.PublicationServiceReference.IPublicationService>, Iitrust.CRLPublication.Client.PublicationServiceReference.IPublicationService {
        
        public PublicationServiceClient() {
        }
        
        public PublicationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PublicationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckConnection() {
            return base.Channel.CheckConnection();
        }
        
        public System.Threading.Tasks.Task<bool> CheckConnectionAsync() {
            return base.Channel.CheckConnectionAsync();
        }
        
        public void ProcessFile(string crlFileName, byte[] crl) {
            base.Channel.ProcessFile(crlFileName, crl);
        }
        
        public System.Threading.Tasks.Task ProcessFileAsync(string crlFileName, byte[] crl) {
            return base.Channel.ProcessFileAsync(crlFileName, crl);
        }
    }
}
